[build-system]
requires = ["uv_build>=0.9.4,<0.10.0"]
build-backend = "uv_build"

[project]
name = "focalpy"
version = "0.1.0"
description = "Multi-scale landscape features in Python"
readme = "README.md"
authors = [
  {email = "marti.bosch@epfl.ch", name = "MartÃ­ Bosch"}
]
classifiers = [
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Natural Language :: English",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13"
]
dependencies = [
  "geopandas>=1.0.0",
  "numpy>=2.0.0",
  "osmnx>=2.0.0",
  "pandas",
  "pyregeon",
  "rasterio",
  "rasterstats",
  "shapely",
  "tqdm",
  "xdem"
]

[project.license]
text = "GPL-3.0"

[project.optional-dependencies]
dev = [
  "build",
  "commitizen",
  "pip",
  "pre-commit",
  "toml",
  "twine"
]
doc = [
  "ipython",
  "myst-parser",
  "nbsphinx",
  "pydata-sphinx-theme",
  "sphinx",
  "sphinxemoji"
]
test = [
  "coverage[toml]",
  "pytest",
  "pytest-cov",
  "ruff"
]

[project.urls]
Repository = "https://github.com/martibosch/focalpy"

[tool.codespell]
skip = "docs/overview.ipynb"

[tool.commitizen]
major_version_zero = true
name = "cz_conventional_commits"
tag_format = "v$version"
version_provider = "pep621"
version_scheme = "semver"

[tool.coverage.report]
exclude_lines = [
  "if self.debug:",
  "pragma: no cover",
  "raise NotImplementedError",
  "except ModuleNotFoundError",
  "except ImportError"
]
ignore_errors = true
omit = ["tests/*", "docs/conf.py"]

[tool.coverage.run]
source = ["focalpy"]

[tool.pixi.dependencies]
python = ">=3.10,<3.14"
gdal = ">=3"

[tool.pixi.environments]
dev = ["dev"]
doc = ["doc"]
test = ["test"]

[tool.pixi.feature.dev.tasks]
build = {cmd = "python -m build"}
check = {cmd = "twine check dist/*", depends-on = ["build"]}

[tool.pixi.feature.doc.tasks]
build-doc = {cmd = "sphinx-build docs docs/_build"}

[tool.pixi.feature.test.tasks]
test = {cmd = "pytest -s --cov=focalpy --cov-report=xml tests"}

[tool.pixi.pypi-dependencies]
focalpy = {path = ".", editable = true}

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["win-64", "linux-64", "osx-64", "osx-arm64"]

[tool.ruff]
line-length = 88

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
  "D",
  "E",
  "F",
  "I"
]

[tool.ruff.lint.isort]
known-first-party = [
  "focalpy"
]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = [
  "F401"
]
"tests/test_focalpy.py" = [
  "D"
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.uv.build-backend]
module-name = "focalpy"
module-root = ""
